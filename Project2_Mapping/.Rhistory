knitr::opts_chunk$set(echo = TRUE)
Violation <- VCode %>%
left_join(VRecord, by = c("VIOLATION.CODE" = "Violation.Code"))
library(ggplot2)    # the king of plotting
library(magrittr)   # chain operators, e.g. to "pipe" a value forward
library(dplyr)      # for data manipulation
library(ggthemes)
library(viridis)
#install.packages("ggridges",dependencies =TRUE)
library(ggridges)
library(packcircles)
library(tidyverse)
install.packages("tmap")
library(tmap)
library(tmaptools)
library(sf)
#install.packages("htmlwidgets",dependencies = TRUE)
library(RColorBrewer)
library(plotly)
#install.packages("ggmap",dependencies = TRUE)
library(ggmap)
#install.packages("leaflet",dependencies = TRUE)
library(leaflet)
VCode <- read.csv("ParkingViolationCodes_January2020.csv")
VRecord <- read.csv("parkingNYC_Jan2020-Jan2021.csv")
str(VCode)
str(VRecord)
Violation <- VCode %>%
left_join(VRecord, by = c("VIOLATION.CODE" = "Violation.Code"))
Top_10 <- Violation %>%
group_by(VIOLATION.CODE) %>%
summarize(Total = n()) %>%
arrange(desc(Total)) %>%
top_n(10) %>%
ungroup()
ggplot(Top_10, aes(x=reorder(VIOLATION.CODE, Total),Total, fill = Total))+
geom_bar(stat="identity",width=0.6,alpha=0.85)+
coord_flip() +
scale_fill_gradient(low = "darkslategray3", high = "navy") +
theme_minimal()+
labs(title="Top 10 Most Common Types of Violations in NYC Area",x="Violation Code", y= "Total N.",caption = "Source: NYC Open Data")
Revenue_10 <- Violation %>%
group_by(VIOLATION.CODE) %>%
summarize(T.Revenue = sum(Manhattan..96th.St....below..Fine.Amount..., na.rm = TRUE)) %>%
arrange(desc(T.Revenue)) %>%
top_n(10) %>%
ungroup()
mypalette<-brewer.pal(10,"Reds")
ggplot(Revenue_10, aes(x=reorder(VIOLATION.CODE, T.Revenue),T.Revenue, fill = T.Revenue))+
geom_bar(stat="identity",width=0.6,alpha=0.9)+
coord_flip() +
scale_fill_gradientn(colors = mypalette) +
theme_minimal()+
labs(title="Top 10 Violations that Generated Highest Revenue",x="Violation Code", y= "Total Revenue",caption = "Source: NYC Open Data")
Fine_color <- Violation %>%
group_by(Vehicle.Color) %>%
summarize(Mean = mean(Manhattan..96th.St....below..Fine.Amount..., na.rm = FALSE), total = sum(Manhattan..96th.St....below..Fine.Amount..., na.rm = FALSE), N = n()) %>%
arrange(desc(Mean)) %>%
top_n(10) %>%
ungroup()
mypalette<- brewer.pal(10,"Set3")
ggplot(Fine_color, aes(x=reorder(Vehicle.Color, Mean),Mean, fill = Mean))+
geom_bar(stat="identity",width=0.6,alpha=1)+
coord_flip() +
scale_fill_gradientn(colors = mypalette) +
theme_minimal()+
labs(title="Vehicles with Highest Average Fine by Color",x="Vehicle Color", y= "Average Revenue",caption = "Source: NYC Open Data")
Fine_year <- Violation %>%
filter(Vehicle.Year != 0, Vehicle.Year < 2021) %>%
group_by(Vehicle.Year) %>%
summarize(Mean = mean(Manhattan..96th.St....below..Fine.Amount..., na.rm = TRUE)) %>%
ungroup() %>%
ggplot(aes(Vehicle.Year,Mean)) +
geom_line(color = "cadetblue", size=0.8, alpha = 0.8)+
geom_point(color="darkred", size=3, alpha = 0.8)+
geom_point(color = "aliceblue", size = 1, alpha = 0.8) +
theme_minimal()+
labs(title="Average Fine by Vehicle Year",x="Vehicle Year",caption = "Source: NYC Open Data")
Fine_year
Fine_BYplate <- Violation %>%
filter(Plate.Type == c("COM","PAS")) %>%
group_by(Plate.Type) %>%
summarize(Mean = mean(Manhattan..96th.St....below..Fine.Amount..., na.rm = TRUE)) %>%
mutate(Mean = round(Mean, 2)) %>%
ungroup() %>%
ggplot(aes(Plate.Type, Mean, fill=Plate.Type)) +
geom_bar(stat ="identity", size = 0.6) +
scale_fill_brewer(palette="Spectral")+
geom_text(aes(label=Mean,fontface = "bold"), position=position_dodge(width=0.9), vjust=-0.5, size=3.5) +
theme_minimal()+
labs(title="Average Fine by Plate Type",x="Plate Type",caption = "Source: NYC Open Data")
Fine_BYplate
Covid <- Violation %>%
mutate_at(vars(Issue.Date),  funs(as.Date(., "%m/%d/%Y"))) %>%
mutate(month = format(Issue.Date, "%m"), VIOLATION.CODE=as.character(VIOLATION.CODE)) %>%
group_by(month,VIOLATION.CODE) %>%
summarise(total = n()) %>%
top_n(9) %>%
arrange(desc(total)) %>%
ungroup()
Covid_Violation <- ggplot(Covid, aes(month,total, size = total,fill= VIOLATION.CODE, color = VIOLATION.CODE))+
geom_point(alpha=0.9, color="antiquewhite4")+
annotate(geom="text", x = 02.5, y = 5000, family="serif", size=2, fontface="bold",
color="cadetblue", label = "March Highest:
Code#63:
NIGHTTIME STD/
PKG IN A PARK") +
annotate(geom="text", x = 04, y = 10000, family="serif", size=2, fontface="bold",
color="deeppink2", label = "Apirl Highest:
Code#10:
Day/Time Limits") +
annotate(geom="text", x = 04.8, y = 5000, family="serif", size=2, fontface="bold",
color="deepskyblue2", label = "May Highest:
Code#20:
Double Parking") +
annotate(geom="text", x = 03.5, y = 40000, family="serif", size=2.5, fontface="bold",
color="darkred", label = "Stay-at-home
Order Date:
03/14/2020") +
geom_vline(xintercept=03.5, lty=2, color = "red") +
theme_minimal()+
labs(title="Top Violation Code by Month",x="Month", y= "Total",caption = "Source: NYC Open Data")
#turn ggplot interactive with ploty
CovidVC <- ggplotly(Covid_Violation)
CovidVC
NYC <- st_read("nypp_21a/nypp.shp")
# What kind of object?
class(NYC)
# Structure
str(NYC, max.level=2)
#Join NYC Shapefile with violation's dataframe, create base layer
NYC_Violation <- NYC %>%
left_join(Violation, by = c("Precinct" = "Violation.Precinct")) %>%
filter(between(Precinct, 1, 34) ) %>%
select(Manhattan..96th.St....below..Fine.Amount..., Precinct,VIOLATION.CODE) %>%
mutate(Fine = Manhattan..96th.St....below..Fine.Amount...)
# Join NYC Shapefile with violation's dataframe
TotalNP <- NYC_Violation %>%
group_by(Precinct) %>%
summarize(Total_ticket = n())
TotalNP
# Join NYC Shapefile with violation's dataframe
layout <- tm_layout(  # Note we are saving the layout here
legend.title.size = 1,
legend.text.size = 0.6,
legend.position = c(0.8,0),
legend.bg.color = "white",
legend.bg.alpha = 1,
bg.color="white",
frame=FALSE)
tm_shape(TotalNP) +
tm_fill("Total_ticket", title = "Total Tickets",
convert2density=TRUE,
style="kmeans")+
tm_style("watercolor")+
tm_layout(title = "Total Number of Parking Violation Tickets by Precincts in Manhattan",
title.position = c("left", "top"),
title.size=10, title.fontface = "bold")+
layout +
tm_borders(alpha=.5)+
tm_text("Precinct",size=.6)
#Calculating total amount of fines by precinct
TotalFines <- NYC_Violation %>%
group_by(Precinct) %>%
summarize(Total_Fines = sum(Fine, na.rm = TRUE))
tm_shape(TotalFines) +
tm_fill(col= "Total_Fines")+
tm_layout(title = "Total Amounts of Fines by Precincts in Manhattan",
title.position = c("left", "top"),
title.size=10, title.fontface = "bold")+
tm_polygons(col="Total_Fines",alpha=0.6)+
layout +
tm_borders(alpha=.5)+
tm_text("Precinct",size=.6)
#Calculating total amount of fines by precinct
AvgFines <- NYC_Violation %>%
group_by(Precinct) %>%
summarize(AvgFines = mean(Fine, na.rm = TRUE))
tm_shape(AvgFines) +
tm_fill(col = "AvgFines", palette = "PuRd")+
tm_layout(title = "Average Amounts of Fines by Precincts in Manhattan",
title.position = c("left", "top"),
title.size=10, title.fontface = "bold")+
tm_polygons(col="AvgFines",alpha=0.6)+
layout +
tm_borders(alpha=.5)+
tm_text("Precinct",size=.6)
Type <- NA
Type <- ifelse(NYC_Violation$VIOLATION.CODE %in% c("1","4","5","12","18","19","77","79"), "Bus", Type)
Type <- ifelse(NYC_Violation$VIOLATION.CODE %in% c("10","14","20","39","86"),"Out of Limit", Type)
Type <- ifelse(NYC_Violation$VIOLATION.CODE %in% c("29","26","33","87","1"),"Permit", Type)
Type <- ifelse(NYC_Violation$VIOLATION.CODE %in% c("31","34","35","37","38","43","69"),"Meter", Type)
Type <- ifelse(is.na(Type),"Other Violations", Type)
NYC_Violation$Types <- Type
# Violation_types <- NYC_Violation %>%
#   group_by(Types) %>%
#   summarize(N = n())
NYC_Violation
# g <- tm_shape(Violation_types)+
#   tm_fill(col = "Types")+
#   tm_facets(by = "Types", free.coords = FALSE, free.scales =F)
# g
# Sets googlemap with API key
register_google(key = "AIzaSyCHT8JqtD3vHfV03lVeAF32uvGyHHBw5BE", write = TRUE)
#Create new DataFrame for Violations in the Upper East Side
UES <- Violation %>%
filter(Violation.Precinct == 19) %>%
select(Plate.ID,Violation.Precinct, VIOLATION.CODE,House.Number,Street.Name,Violation.County, Vehicle.Make)
UES
#Concatenate two columns containing address information together to create "location" column
UES_40 <- UES %>%
filter(VIOLATION.CODE == 40) %>%
add_column(City = "New York City") %>%
unite(c(House.Number, Street.Name), col = "location", sep = " ") %>%
unite(c(location, City, Violation.County), col = "location", sep = " , ") %>%
top_n(500)
str(UES_40)
#Try for a single element
element <- base::sample(x = UES_40$location,
size=1,
replace = FALSE)
ggmap::geocode(location = element)
#run geocode function through every row, save to dataframe
GeoCoded <- purrr::map_df(.x = UES_40$location, .f = ggmap::geocode)
GeoCoded_UES40 <- bind_cols(UES_40, GeoCoded)
GeoCoded_UES40
content <- paste("Plate_ID:",GeoCoded_UES40$Plate.ID,"<br/>",
"Violation_Precinct:",GeoCoded_UES40$Violation.Precinct,"<br/>",
"Where:",GeoCoded_UES40$location,"<br/>",
"Car_Brand:",GeoCoded_UES40$Vehicle.Make,"<br/>")
Fire <- leaflet(GeoCoded_UES40) %>%
addTiles('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png') %>%
addCircles(col= "brown", popup = content)
Fire  # Print the map
GeoCoded_UES40l <- GeoCoded_UES40 %>%
mutate(LuxuryCar = ifelse(Vehicle.Make == "yamah","Luxury","No"))
Repeated <- GeoCoded_UES40 %>%
group_by(Plate.ID) %>%
summarize(total = n())
Joined <- GeoCoded_UES40l %>%
left_join(Repeated) %>%
mutate(Repeated = ifelse(total > 1, "Repeated", "First Time"))
Joined
content2 <- paste("Plate_ID:",Joined$Plate.ID,"<br/>",
"Violation_Precinct:",Joined$Violation.Precinct,"<br/>",
"Where:",Joined$location,"<br/>",
"Car_Brand:",Joined$Vehicle.Make,"<br/>",
"Lucury:", Joined$LuxuryCar,"<br/>",
"Repeated:", Joined$Repeated,"<br/>")
pal = colorFactor("PuOr", domain = Joined$Repeated) # Grab a palette
color_Repeated = pal(Joined$Repeated)
Fire2 <- leaflet(GeoCoded_UES40) %>%
addTiles('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png') %>%
addCircles(color= color_Repeated, popup = content2) %>%
addLegend(pal = pal, values = ~Joined$Repeated, title = "Repeated")
Fire2  # Print the map
content2 <- paste("Plate_ID:",Joined$Plate.ID,"<br/>",
"Violation_Precinct:",Joined$Violation.Precinct,"<br/>",
"Where:",Joined$location,"<br/>",
"Car_Brand:",Joined$Vehicle.Make,"<br/>",
"Lucury:", Joined$LuxuryCar,"<br/>",
"Repeated:", Joined$Repeated,"<br/>")
pal = colorFactor("PuOr", domain = Joined$Repeated) # Grab a palette
color_Repeated = pal(Joined$Repeated)
FireCluster <- leaflet(GeoCoded_UES40) %>%
addTiles('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png') %>%
addCircleMarkers(color = color_Repeated,
popup = content2,
clusterOptions = markerClusterOptions())
FireCluster  # Print the map
Violation_types <- NYC_Violation %>%
group_by(Types) %>%
summarize(N = n())
Violation_types
# Violation_types <- NYC_Violation %>%
#   group_by(Types) %>%
#   summarize()
Violation_types
# Violation_types <- NYC_Violation %>%
#   group_by(Types) %>%
#   summarize()
NYC_Violation
# g <- tm_shape(Violation_types)+
#   tm_fill(col = "Types")+
#   tm_facets(by = "Types", free.coords = FALSE, free.scales =F)
# g
Violation_types <- NYC_Violation %>%
group_by(Types,Precinct) %>%
summarize(N = n())
Violation_types
# g <- tm_shape(Violation_types)+
#   tm_fill(col = "Types")+
#   tm_facets(by = "Types", free.coords = FALSE, free.scales =F)
# g
type <- tm_shape(Violation_types)+
tm_fill(col = "N", palette = "RdBu")+
tm_facets(by = "Types", free.coords = FALSE, free.scales =F)+
tm_layout(title = "Total Violations",
title.position = c("left", "top"),
title.size=10, title.fontface = "bold")
type
type <- tm_shape(Violation_types)+
tm_fill(col = "N", palette = "PuBu")+
tm_facets(by = "Types", free.coords = FALSE, free.scales =F)+
tm_layout(title = "Total Violations",
title.position = c("left", "top"),
title.size=10, title.fontface = "bold")
type
type <- tm_shape(Violation_types)+
tm_fill(col = "N", palette = "PuBu")+
tm_facets(by = "Types", free.coords = FALSE, free.scales =F)+
tm_polygons(col = "Precinct") +
tm_layout(title = "Total Violations",
title.position = c("left", "top"),
title.size=10, title.fontface = "bold")
type
type <- tm_shape(Violation_types)+
tm_fill(col = "N", palette = "PuBu")+
tm_facets(by = "Types", free.coords = FALSE, free.scales = TRUE)+
tm_polygons(col = "Precinct") +
tm_layout(title = "Total Violations",
title.position = c("left", "top"),
title.size=10, title.fontface = "bold")
type
type <- tm_shape(Violation_types)+
tm_fill(col = "N", palette = "PuBu")+
tm_facets(by = "Types", free.coords = FALSE, free.scales = TRUE)+
tm_polygons(col = "Precinct") +
tm_layout(title = "Total Violations",
title.position = c("left", "top"),
title.size=2, title.fontface = "bold")
type
type <- tm_shape(Violation_types)+
tm_fill(col = "N", palette = "PuBu")+
tm_facets(by = "Types", free.coords = FALSE, free.scales = TRUE)+
tm_polygons(col = "Precinct") +
layout
type
type <- tm_shape(Violation_types)+
tm_fill(col = "N", palette = "PuBu")+
tm_facets(by = "Types", ncol = 2, free.coords = FALSE, free.scales = TRUE)+
tm_polygons(col = "Precinct") +
layout
ty
type <- tm_shape(Violation_types)+
tm_fill(col = "N", palette = "PuBu")+
tm_facets(by = "Types", ncol = 2, free.coords = FALSE, free.scales = TRUE)+
tm_polygons(col = "Precinct") +
layout
type
type <- tm_shape(Violation_types)+
tm_fill(col = "N", palette = "PuBu")+
tm_facets(by = "Types", ncol = 1, free.coords = FALSE, free.scales = TRUE)+
tm_polygons(col = "Precinct") +
layout
type
type <- tm_shape(Violation_types)+
tm_fill(col = "N", palette = "PuBu")+
tm_facets(by = "Types", ncol = 4, free.coords = FALSE, free.scales = TRUE)+
tm_polygons(col = "Precinct") +
layout
type
type <- tm_shape(Violation_types)+
tm_fill(col = "N", palette = "PuBu")+
tm_facets(by = "Types", ncol = 5, free.coords = FALSE, free.scales = TRUE)+
tm_polygons(col = "Precinct") +
layout
type
type <- tm_shape(Violation_types)+
tm_fill(col = "N", palette = "RdPu")+
tm_facets(by = "Types", ncol = 5, free.coords = FALSE, free.scales = TRUE)+
tm_polygons(col = "Precinct") +
layout
type
type <- tm_shape(Violation_types)+
tm_fill(col = "N", palette = "PuRd")+
tm_facets(by = "Types", ncol = 5, free.coords = FALSE, free.scales = TRUE)+
tm_polygons(col = "Precinct") +
layout
type
type <- tm_shape(Violation_types)+
tm_fill(col = "N", palette = "RdPu")+
tm_facets(by = "Types", ncol = 5, free.coords = FALSE, free.scales = TRUE)+
tm_polygons(col = "Precinct") +
layout
type
Violation_types <- NYC_Violation %>%
group_by(Types,Precinct) %>%
summarize(Total = n())
Violation_types
type <- tm_shape(Violation_types)+
tm_fill(col = "Total", palette = "RdPu")+
tm_facets(by = "Types", ncol = 5, free.coords = FALSE, free.scales = TRUE)+
tm_polygons(col = "Precinct") +
layout
type
tm_shape(AvgFines) +
tm_fill(col = "AvgFines", palette = "BuPu")+
tm_layout(title = "Average Amounts of Fines by Precincts in Manhattan",
title.position = c("left", "top"),
title.size=10, title.fontface = "bold")+
tm_polygons(col="AvgFines",alpha=0.6)+
layout +
tm_borders(alpha=.5)+
tm_text("Precinct",size=.6)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
#Create new DataFrame for Violations in the Upper East Side
UES <- Violation %>%
filter(Violation.Precinct == 19) %>%
select(Plate.ID,Violation.Precinct, VIOLATION.CODE,House.Number,Street.Name,Violation.County, Vehicle.Make)
head(UES)
GeoCoded_UES40 <- bind_cols(UES_40, GeoCoded)
head(GeoCoded_UES40)
GeoCoded_UES40l <- GeoCoded_UES40 %>%
mutate(LuxuryCar = ifelse(Vehicle.Make == "yamah","Luxury","No"))
Repeated <- GeoCoded_UES40 %>%
group_by(Plate.ID) %>%
summarize(total = n())
Joined <- GeoCoded_UES40l %>%
left_join(Repeated) %>%
mutate(Repeated = ifelse(total > 1, "Repeated", "First Time"))
head(Joined)
content2 <- paste("Plate_ID:",Joined$Plate.ID,"<br/>",
"Violation_Precinct:",Joined$Violation.Precinct,"<br/>",
"Where:",Joined$location,"<br/>",
"Car_Brand:",Joined$Vehicle.Make,"<br/>",
"Luxury:", Joined$LuxuryCar,"<br/>",
"Repeated:", Joined$Repeated,"<br/>")
pal = colorFactor("PuOr", domain = Joined$Repeated) # Grab a palette
color_Repeated = pal(Joined$Repeated)
Fire2 <- leaflet(GeoCoded_UES40) %>%
addTiles('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png') %>%
addCircles(color= color_Repeated, popup = content2) %>%
addLegend(pal = pal, values = ~Joined$Repeated, title = "Repeated")
Fire2  # Print the map
# Sets googlemap with API key
register_google(key = "GOOGLE_MAPS_API_KEY", write = TRUE)
# Sets googlemap with API key
register_google(key = "GOOGLE_MAPS_API_KEY", write = TRUE)
# Sets googlemap with API key
register_google(key = "GOOGLE_MAPS_API_KEY", write = TRUE)
content <- paste("Plate_ID:",GeoCoded_UES40$Plate.ID,"<br/>",
"Violation_Precinct:",GeoCoded_UES40$Violation.Precinct,"<br/>",
"Where:",GeoCoded_UES40$location,"<br/>",
"Car_Brand:",GeoCoded_UES40$Vehicle.Make,"<br/>")
Fire <- leaflet(GeoCoded_UES40) %>%
addTiles('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png') %>%
addCircles(col= "brown", popup = content)
Fire  # Print the map
content2 <- paste("Plate_ID:",Joined$Plate.ID,"<br/>",
"Violation_Precinct:",Joined$Violation.Precinct,"<br/>",
"Where:",Joined$location,"<br/>",
"Car_Brand:",Joined$Vehicle.Make,"<br/>",
"Luxury:", Joined$LuxuryCar,"<br/>",
"Repeated:", Joined$Repeated,"<br/>")
pal = colorFactor("PuOr", domain = Joined$Repeated) # Grab a palette
color_Repeated = pal(Joined$Repeated)
Fire2 <- leaflet(GeoCoded_UES40) %>%
addTiles('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png') %>%
addCircles(color= color_Repeated, popup = content2) %>%
addLegend(pal = pal, values = ~Joined$Repeated, title = "Repeated")
Fire2  # Print the map
content2 <- paste("Plate_ID:",Joined$Plate.ID,"<br/>",
"Violation_Precinct:",Joined$Violation.Precinct,"<br/>",
"Where:",Joined$location,"<br/>",
"Car_Brand:",Joined$Vehicle.Make,"<br/>",
"Lucury:", Joined$LuxuryCar,"<br/>",
"Repeated:", Joined$Repeated,"<br/>")
pal = colorFactor("PuOr", domain = Joined$Repeated) # Grab a palette
color_Repeated = pal(Joined$Repeated)
FireCluster <- leaflet(GeoCoded_UES40) %>%
addTiles('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png') %>%
addCircleMarkers(color = color_Repeated,
popup = content2,
clusterOptions = markerClusterOptions())
FireCluster  # Print the map
content <- paste("Plate_ID:",GeoCoded_UES40$Plate.ID,"<br/>",
"Violation_Precinct:",GeoCoded_UES40$Violation.Precinct,"<br/>",
"Where:",GeoCoded_UES40$location,"<br/>",
"Car_Brand:",GeoCoded_UES40$Vehicle.Make,"<br/>")
Fire <- leaflet(GeoCoded_UES40) %>%
addTiles('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png') %>%
addCircles(col= "brown", popup = content)
Fire  # Print the map
# Sets googlemap with API key
register_google(key = "AIzaSyCHT8JqtD3vHfV03lVeAF32uvGyHHBw5BE", write = TRUE)
# Sets googlemap with API key
register_google(key = "AIzaSyCHT8JqtD3vHfV03lVeAF32uvGyHHBw5BE", write = TRUE)
content <- paste("Plate_ID:",GeoCoded_UES40$Plate.ID,"<br/>",
"Violation_Precinct:",GeoCoded_UES40$Violation.Precinct,"<br/>",
"Where:",GeoCoded_UES40$location,"<br/>",
"Car_Brand:",GeoCoded_UES40$Vehicle.Make,"<br/>")
Fire <- leaflet(GeoCoded_UES40) %>%
addTiles('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png') %>%
addCircles(col= "brown", popup = content)
Fire  # Print the map
# Sets googlemap with API key
register_google(key = "AIzaSyCHT8JqtD3vHfV03lVeAF32uvGyHHBw5BE", write = TRUE)
